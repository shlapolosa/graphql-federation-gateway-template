---
# Knative Service for GraphQL Federation Gateway
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: graphql-gateway
  namespace: default
  labels:
    app.kubernetes.io/name: graphql-gateway
    app.kubernetes.io/component: graphql-gateway
    app.kubernetes.io/part-of: APP_CONTAINER_PLACEHOLDER
    app.kubernetes.io/managed-by: kubevela
spec:
  template:
    metadata:
      annotations:
        autoscaling.knative.dev/minScale: "1"
        autoscaling.knative.dev/maxScale: "10"
        run.googleapis.com/execution-environment: gen2
      labels:
        app.kubernetes.io/name: graphql-gateway
        app.kubernetes.io/component: graphql-gateway
        app.kubernetes.io/part-of: APP_CONTAINER_PLACEHOLDER
    spec:
      serviceAccountName: graphql-gateway-sa
      containers:
      - image: docker.io/socrates12345/graphql-gateway:latest
        ports:
        - containerPort: 8080
          name: http1
        env:
        - name: GATEWAY_NAME
          value: "graphql-gateway"
        - name: NAMESPACE
          value: "default"
        - name: SERVICE_SELECTOR_LABELS
          value: "app.kubernetes.io/managed-by=kubevela"
        - name: AUTO_DISCOVERY
          value: "true"
        - name: DISCOVERY_INTERVAL
          value: "5m"
        - name: GATEWAY_PORT
          value: "8080"
        - name: HOST
          value: "0.0.0.0"
        - name: LOG_LEVEL
          value: "info"
        - name: NODE_ENV
          value: "production"
        - name: FEDERATION_ANNOTATION
          value: "graphql.federation/enabled"
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        volumeMounts:
        - name: gateway-config
          mountPath: /app/config
          readOnly: true
      volumes:
      - name: gateway-config
        configMap:
          name: graphql-gateway-config